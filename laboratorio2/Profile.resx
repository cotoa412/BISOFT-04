<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j4opUPitku+nspes6c/LG/zoGRQevDj0n+a/qQpzGSke2yphkzUEJncr/wBethHilVlZfPJyu3R0vU/b
        ro4T06OO57ewbUfvQ4zLFZu9gUclGAw89YJcVO9HTgF7UoyJqkcCWpj6ijYaCMD5pO21X1huc+zs0CWC
        7XW/hRNgpBLk0wCNnASwEvisuQ8112+qA6L7a/uaZmPdYBJucley29BueqP8+n/MpGQouB91lEoJQLtF
        5efgRgSU+Zy9VGHXnSoYLFf3mfG6CizBQ0EfJuQ4r78NvnbY9qAICDx8oqIkhNvkkl6gI6rc2SbFfSfO
        SSHFTJ1Y+OAPRrZTdQQFjn2nr0pIs547Rfvt+wDnghChPAdvFFhoqDkt3KomJjKixb/WH//aAAwDAQAC
        AAMAAAAQ++++++++yyyyyyyyCCCCCCCCW++yyyyyy++++++++OOOOOOOOOq+++yyyyy+yyyyy+++++++
        +++++yyyyyy++++++4+++++++++++C++OOOO+r8+++RHOOOOOOOOO6+++CCCGwrQCCCmLy++++++++ey
        ++CCCCw88+xy88VOOOOOOOO++++++++d8/c8s/8AEiggggggglvvvvvvrM/PPPPPPPjjjjjjjjlvssvv
        vpvPPPPPPPHePvvvvvvlvvvvvvqfPPPPPPPPOggggggglvjjvvvrvPPPPPPPPOjjjjjjjlvvvvvrsvPP
        PPPPPPBPvvvvvvvvvvjjjivPPPPPPPPBMsssssslsvvvvvrPPPPPPPPPAwggggggljvvvvvufPPPPPPP
        PLwgggggglvvvsssqfPPPPPPPPLvvvvvvvnvjjjjjvE/PPPPPPPMvvvvvvvlujjsssslvPPPPPPPNvvv
        vvvvlvvvvvvvvPPPPPPPPNcssssssljssvvvvvfPPPPPPPD7PvvvvvnvvvgggvH/ADzzzzzzzwfD7777
        5477775ITzzzzzzzzzzzGvrLLLb777KG/wA888888888888s359s2y+xFN888888888888888888VQde
        c8888MMMMMMMM888888888QM888881R8888888km188888848888lGww1wBJjiqeyct088884A88vF++
        ++++++++yCCqf8888IM84P4y+y66yyyyy+24cr18888884fhbjR5Sy++mZtt88su888888v8888wwwTy
        oQw888888888888888888889lc8888888888888888888888878888888888888888AAAA8888888888
        88888888888888888888888888888888/8QAHxEBAAIBBQEBAQAAAAAAAAAAAQARMBAgITFAQVFQ/9oA
        CAEDAQE/EP7d+kLdw8YhsJ+/GFENh3EvxDnSoCymUz7onPhPGlGyjTv4TALIZwvC+DtiHOft6Xf03z6f
        b0u2LrnO8XXOcQbwvwdMPbwdMI++DrhTjOcwKMQygsAZEMRNLwBcDOlysVtEwkK8aDoKAPOA3qEG8C0Q
        cEci1G3WgwMpEVChP0iIv5FvX4OJainP8MKtziiiDe9Q/UqNutFEojTrYW7gBKJWFNQ3pzg5NPo+cWSx
        9Nf3/wD/xAAhEQEAAgICAwADAQAAAAAAAAABABEwMSFAECBBUFFhYP/aAAgBAgEBPxD/ACgC32BOncw9
        HUfNdJ4Li23D00YqHpcVeDUo2z+0A6mzw7D0Xfgp9LVV+FxXRW3A66BUYTiDZefjiK87XEuHPoYvrPoY
        vrPri2z6/g4POdLKiU1hPF9k17ItnQ2wqm4Nl5louK14qeHKgcxOGQZBxB5RVbc4jTBm4Fgj6INxHUW9
        9MU14QRTrrfceFBbUf0i8gFaJRvwUMv5RL5lto3yCYE3AGvP2MQKwBnp5MNBLzJIcCUPuLZ8jxUUxbqK
        fYB9n7/T9MU+wD7ApW48tjn3KGC08fE66plRfZW/z/8A/8QAKhAAAwABAQgCAgMBAQEAAAAAAAERITEQ
        MEBBUWFxgSChkbFQwdHh8GD/2gAIAQEAAT8Q/gMGDBgwYMGDBgwYMGDBgxwVKUpSlKUpSlKUpgwYMGDB
        gwYMGDBgwYMGP4KEIQhCEIQhCEIQhPjgwYMGTJkyZMmTP8Jn+Sz86UpSlKUYtrEMQxDEMX/xdKUpCEIQ
        hCfCeewPS82K0YbS8XcpBdWL8o9JYw/+8NS/FiGIYhi2uWisSS6sXNYRvq+o9d3e4YkHVF9i2PMS88hj
        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
        2Q==
</value>
  </data>
  <metadata name="CustomMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>